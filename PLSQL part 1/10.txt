create or replace function get_job (fv_job_id jobs.job_id%type)
return jobs.job_title%type IS rv_title jobs.job_title%type;
begin
 select job_title into rv_title from jobs where job_id = fv_job_id;
 return rv_title;
end get_job;

variable bv_TITLE varchar2(35);
EXECUTE :bv_TITLE := get_job ('SA_REP');
PRINT bv_TITLE;

create or replace function get_an_comp (fv_salary NUMBER, fv_comp NUMBER)
return NUMBER IS rv_sal_y NUMBER;
begin
  return (NVL(fv_salary,0) * 12 + (NVL(fv_comp,0) * nvl(fv_salary,0) * 12));
end get_an_comp;

select employee_id, last_name, get_an_comp(salary,NULL) from employees where department_id = 30;

CREATE OR replace
  FUNCTION valid_depid (fv_dep_id employees.department_id%type) 
    RETURN BOOLEAN IS rv_flag PLS_INTEGER;
BEGIN
  SELECT  1
  INTO    rv_flag
  FROM    departments
  WHERE   department_id = fv_dep_id;
  RETURN  TRUE;
EXCEPTION
  WHEN NO_DATA_FOUND THEN
    RETURN FALSE;
END valid_depid;

 
CREATE or replace
PROCEDURE add_emp (
 v_first_name employees.first_name%type,
 v_last_name employees.last_name%type,
 v_email employees.email%type := 'email',
 v_jobs employees.job_id%type := 'SA_REP',
 v_mgr employees.manager_id%type := 145,
 v_sal employees.salary%type := 1000,
 v_comm employees.commission_pct%type := 0,
 v_deptid employees.department_id%type := 30)
IS
BEGIN
  IF valid_depid(v_deptid) THEN
   INSERT INTO employees(employee_id, first_name, last_name, email, job_id, manager_id, hire_date, salary, commission_pct, department_id)
   VALUES (employees_seq.NEXTVAL, v_first_name, v_last_name, v_email, v_jobs, v_mgr, TRUNC(SYSDATE), v_sal, v_comm, v_deptid);
 ELSE
   RAISE_APPLICATION_ERROR (-20222, 'Not exist department');
 END IF;
END add_emp;

EXECUTE add_emp(v_first_name=>'Jane', v_last_name=>'Harris', v_deptid=> 15);
EXECUTE add_emp(v_first_name=>'Jane', v_last_name=>'Harris', v_deptid=> 80);